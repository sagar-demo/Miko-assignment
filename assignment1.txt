import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class FileBasedDatabase {

    private static final String DATABASE_DIR = "database";
    private static final String METADATA_FILE = "metadata.txt";

    public static void main(String[] args) {
        String createTableQuery = "CREATE TABLE my_table (col1 INTEGER, col2 STRING)";
        createTable(createTableQuery);

        String insertIntoQuery = "INSERT INTO my_table VALUES (123, 'Hello')";
        insertInto(insertIntoQuery);
    }

    public static void createTable(String query) {
        String tableName = getTableName(query);
        List<Column> columns = getColumns(query);

        File metadataFile = new File(DATABASE_DIR, METADATA_FILE);

        try (FileWriter writer = new FileWriter(metadataFile, true)) {
            writer.write(tableName + "\n");
            for (Column column : columns) {
                writer.write(column.getName() + "," + column.getType() + "\n");
            }
            System.out.println("Table " + tableName + " created successfully.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void insertInto(String query) {
        String tableName = getTableName(query);
        List<String> values = getValues(query);

        File tableFile = new File(DATABASE_DIR, tableName + ".txt");

        try (FileWriter writer = new FileWriter(tableFile, true)) {
            writer.write(String.join(",", values) + "\n");
            System.out.println("Record inserted successfully.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static String getTableName(String query) {
        Pattern pattern = Pattern.compile("CREATE TABLE (\\w+)");
        Matcher matcher = pattern.matcher(query);
        if (matcher.find()) {
            return matcher.group(1);
        }
        return null;
    }

    private static List<Column> getColumns(String query) {
        List<Column> columns = new ArrayList<>();
        Pattern pattern = Pattern.compile("\\((.*?)\\)");
        Matcher matcher = pattern.matcher(query);
        if (matcher.find()) {
            String columnString = matcher.group(1);
            String[] columnArray = columnString.split(",");
            for (String column : columnArray) {
                String[] parts = column.trim().split("\\s+");
                if (parts.length == 2) {
                    String name = parts[0];
                    String type = parts[1];
                    columns.add(new Column(name, type));
                }
            }
        }
        return columns;
    }

    private static List<String> getValues(String query) {
        List<String> values = new ArrayList<>();
        Pattern pattern = Pattern.compile("\\((.*?)\\)");
        Matcher matcher = pattern.matcher(query);
        if (matcher.find()) {
            String valuesString = matcher.group(1);
            String[] valueArray = valuesString.split(",");
            for (String value : valueArray) {
                values.add(value.trim());
            }
        }
        return values;
    }

    private static class Column {
        private String name;
        private String type;

        public Column(String name, String type) {
            this.name = name;
            this.type = type;
        }

        public String getName() {
            return name;
        }

        public String getType() {
            return type;
        }
    }
}
